{"filter":false,"title":"model.mos","tooltip":"/model.mos","undoManager":{"mark":29,"position":29,"stack":[[{"start":{"row":0,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["model ModelName","  options noimplicit","  uses \"mmxprs\"","","  declarations","    ! ...","    Objective:linctr","  end-declarations","","  writeln(\"Begin running model\")","  !...","  writeln(\"End running model\")","end-model",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["model SeatingArrangement","    uses \"mmxprs\"  ","","    declarations","        num_groups = 7  ","        num_tables  = 5  ","        group_sizes: array(1..7) of integer  ","        Z: array(1..7, 1..5) of mpvar  ","        y: array(1..7, 1..5) of mpvar  ","    end-declarations","","    ","    group_sizes :: [3, 4, 2, 5, 6, 4, 5]","","","    forall(i in 1..num_groups, j in 1..num_tables) do","        Z(i,j) is_binary","        y(i,j) is_integer","    end-do","","","    Objective := sum(i in 1..num_groups) (sum(j in 1..num_tables) Z(i,j) - 1)","","    forall(j in 1..num_tables) do","        sum(i in 1..num_groups) y(i,j) <= 6","    end-do","","","    forall(i in 1..num_groups) do","        sum(j in 1..num_tables) y(i,j) = group_sizes(i)","    end-do","","","    forall(i in 1..num_groups, j in 1..num_tables) do","        y(i,j) <= group_sizes(i) * Z(i,j)","    end-do","","","    forall(i in 1..num_groups) do","        sum(j in 1..num_tables) Z(i,j) <= 2","    end-do","    ","    forall(j in 1..num_tables-1) do","        sum(i in 1..num_groups) y(i, j) >= sum(i in 1..num_groups) y(i, j+1)","    end-do","    ","    forall(i in 1..num_groups, j in 1..num_tables) do","        2*Z(i,j) <= y(i,j)","    end-do","    ","","   ","","    ","    setparam(\"XPRS_ENUMDUPLPOL\",3)","","! Alternatively: switch off MIP heuristics to avoid generation of doubles","! setparam(\"XPRS_HEUREMPHASIS\", 0)","","! Disable presolve operations that attempt to improve the efficiency by ","! cutting off MIP solutions from the feasible region","    setparam(\"XPRS_MIPDUALREDUCTIONS\", 0)","","! Set the max. number of solutions to store (default: 10)","    setparam(\"XPRS_enummaxsol\", 10)","  ","    minimize(XPRS_ENUM,Objective)","    forall(k in 1..getparam(\"XPRS_enumsols\")) do","        selectsol(k)","        writeln(\"Solution \", k)","        writeln(\"Optimal Objective Value: \", getobjval)","        forall(i in 1..num_groups) do","            forall(j in 1..num_tables) do","                if getsol(Z(i,j)) > 0.5 then","                    writeln(\"Group \", i, \" is assigned to Table \", j, \" with \", getsol(y(i,j)), \" people\")","                end-if","            end-do","        end-do","    end-do","","end-model",""]}],[{"start":{"row":23,"column":29},"end":{"row":23,"column":30},"action":"insert","lines":["-"],"id":3}],[{"start":{"row":23,"column":30},"end":{"row":23,"column":31},"action":"insert","lines":["1"],"id":4}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":27,"column":0},"end":{"row":29,"column":10},"action":"insert","lines":["forall(j in 1..num_tables-1) do","        sum(i in 1..num_groups) y(i,j) <= 6","    end-do"],"id":6}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "],"id":7}],[{"start":{"row":27,"column":2},"end":{"row":27,"column":4},"action":"insert","lines":["  "],"id":8}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"remove","lines":["1"],"id":9}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":28},"action":"insert","lines":["num_tables-1"],"id":10}],[{"start":{"row":5,"column":22},"end":{"row":5,"column":23},"action":"remove","lines":["5"],"id":11}],[{"start":{"row":5,"column":22},"end":{"row":5,"column":23},"action":"insert","lines":["6"],"id":12}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"remove","lines":["5"],"id":13}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"insert","lines":["6"],"id":14}],[{"start":{"row":8,"column":26},"end":{"row":8,"column":27},"action":"remove","lines":["5"],"id":15}],[{"start":{"row":8,"column":26},"end":{"row":8,"column":27},"action":"insert","lines":["6"],"id":16}],[{"start":{"row":28,"column":42},"end":{"row":28,"column":43},"action":"remove","lines":["6"],"id":17}],[{"start":{"row":28,"column":42},"end":{"row":28,"column":43},"action":"insert","lines":["4"],"id":18}],[{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":19}],[{"start":{"row":31,"column":0},"end":{"row":33,"column":10},"action":"insert","lines":["forall(j in num_tables-1..num_tables-1) do","        sum(i in 1..num_groups) y(i,j) <= 4","    end-do"],"id":20}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["  "],"id":21}],[{"start":{"row":31,"column":2},"end":{"row":31,"column":4},"action":"insert","lines":["  "],"id":22}],[{"start":{"row":33,"column":10},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":31,"column":41},"end":{"row":31,"column":42},"action":"remove","lines":["1"],"id":24}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":41},"action":"remove","lines":["-"],"id":25}],[{"start":{"row":31,"column":27},"end":{"row":31,"column":28},"action":"remove","lines":["1"],"id":26}],[{"start":{"row":31,"column":26},"end":{"row":31,"column":27},"action":"remove","lines":["-"],"id":27}],[{"start":{"row":32,"column":42},"end":{"row":32,"column":43},"action":"remove","lines":["4"],"id":28}],[{"start":{"row":32,"column":42},"end":{"row":32,"column":43},"action":"insert","lines":["2"],"id":29}],[{"start":{"row":71,"column":33},"end":{"row":71,"column":34},"action":"insert","lines":["0"],"id":30}],[{"start":{"row":71,"column":33},"end":{"row":71,"column":34},"action":"remove","lines":["0"],"id":31}]]},"ace":{"folds":[],"scrolltop":1240.5,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":88,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":76,"state":"start","mode":"plugins/fico.ide.language.mosel/mode/mosel"}},"timestamp":1734016619602,"hash":"2034418fc5fffaddb4b7f67b021656366380cc33"}